Below is the basic tentative structure of EduSync, but it can be changed later on: /edusync/ │ ├── /pages/ │ ├── index.jsx → Landing page (optional) │ ├── login.jsx → Login page for all roles │ ├── register.jsx → (Optional) Register new user (dev/testing) │ ├── not-authorized.jsx → For unauthorized access │ ├── /admin/ │ │ ├── dashboard.jsx → Admin dashboard (stats, summary cards) │ │ ├── users.jsx → Add/manage students & faculty │ │ ├── events.jsx → Create/view events │ │ ├── invoices.jsx → Generate/view invoices │ │ ├── messages.jsx → Send messages to faculty/students │ │ ├── analytics.jsx → Reports (optional) │ │ └── profile.jsx → Admin profile page │ │ │ ├── /faculty/ │ │ ├── dashboard.jsx → Faculty dashboard (today's classes, etc.) │ │ ├── schedule.jsx → View timetable │ │ ├── leaves.jsx → Apply for leave (LLM-generated message) │ │ ├── inbox.jsx → Received messages │ │ ├── sent.jsx → Sent messages │ │ └── profile.jsx → Faculty profile page │ │ │ ├── /student/ │ │ ├── dashboard.jsx → Student dashboard (today's classes, notices) │ │ ├── timetable.jsx → View class schedule │ │ ├── invoices.jsx → View/pay invoices │ │ ├── inbox.jsx → Received messages (e.g. from faculty) │ │ ├── sent.jsx → Send query to faculty/admin │ │ └── profile.jsx → Student profile page │ │ ├── /api/ → Backend API routes │ │ ├── /auth/ │ │ │ ├── login.js │ │ │ ├── register.js │ │ │ ├── logout.js │ │ ├── /messages/ │ │ │ ├── send.js │ │ │ ├── inbox.js │ │ │ └── sent.js │ │ ├── /users/ │ │ │ ├── create.js │ │ │ ├── list.js │ │ ├── /events/ │ │ │ ├── create.js │ │ │ └── upcoming.js │ │ ├── /invoices/ │ │ │ ├── generate.js │ │ │ ├── list.js │ │ ├── /leaves/ │ │ │ ├── request.js │ │ │ └── list.js │ │ ├── /schedule/ │ │ │ ├── timetable.js │ │ └── /students/ │ │ ├── list.js │ │ └── class.js │ ├── /components/ │ ├── Navbar.jsx │ ├── Sidebar.jsx │ ├── Footer.jsx │ ├── MessageCard.jsx │ ├── InvoiceCard.jsx │ ├── EventCard.jsx │ ├── TimetableCard.jsx │ ├── ProtectedRoute.jsx → Protects dashboard pages (JWT/session) │ ├── /services/ │ ├── api.js → Axios instance to call backend APIs │ ├── /utils/ │ ├── auth.js → JWT/token helper functions │ ├── roleGuard.js → Role-based access helper │ ├── /styles/ │ ├── globals.css → Global styles or TailwindCSS import │ ├── /public/ │ └── logo.png → Project logo or images │ ├── .env → DB URL, JWT secret, SMTP config ├── package.json ├── README.md └── next.config.js

there should be a 'mockData' file from where the data should be fetched in 'adminApi' file, then those functions should be used in the pages. For example:

// utils/mockData.js export const mockStudents = [ { id: 1, name: "Ali Raza", email: "ali.raza@student.edusync.com", department: "CS" }, // Add more as needed ]; Then in your component:

import { mockStudents } from "@/utils/mockData";

useEffect(() => { setStudents(mockStudents); }, []); 